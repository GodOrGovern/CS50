1.  Both stdint.h and inttypes.h define new integer types that increase the
    portability of programs compiled in C99.

2.  Each type that is defined by of one of those "exact width" integer types
    will be of uniform size regardless of what value it is assigned.

3.  A BYTE is one byte; a DWORD is four bytes; a LONG is also four bytes;
    a WORD is two bytes.

4.  The first two bytes must be BM (in ASCII).

5.  bfSize contains the size (in bytes) of the entire file, biSize contains
    only the size (in bytes) of the structure BITMAPINFOHEADER.

6.  If biSize is negative, the bitmap is top-down DIB that originates in the
    upper-left corner and it cannot be compressed.

7.  The field biBitCount specifies the bits-per-pixel in a bitmap.

8.  In line 24 it might return NULL if the specified infile (the second
    cmd-line argument) does not exist, is corrupted, or cannot be accessed
    for some other reason. In line 32 it might return NULL if there is not
    enough memory to create or enough storage to keep the specified outfile
    (the third cmd-line argument).

9.  The third argument is 1 because each structure constitutes one item of
    data, which is what the third argument in fread() represents.

10. It assigns a value of 3 to padding.

11. Generally speaking, fseek() changes what part of the file is being read or
    written to by "seeking" a different location that is n bytes away (as
    specified in the second argument) from a certain location (as specified
    in the third argument). In this case it is used to skip over any potential
    padding at the end of a scanline.

12. SEEK_CUR is used as the third argument in fseek(). It causes the current
    location to be used as the starting point for which the offsetting n bytes as 
    specified in the second argument (in this case just the length of the padding) 
    produce a new location.
